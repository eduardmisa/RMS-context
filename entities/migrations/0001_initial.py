# Generated by Django 3.0.3 on 2020-07-12 13:16

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('action', models.CharField(choices=[('Add', 'Add'), ('Update', 'Update'), ('DELETED', 'DELETED')], default='Add', max_length=50)),
                ('entity', models.CharField(choices=[('COMPANY', 'COMPANY')], default='COMPANY', max_length=50)),
                ('row_id', models.IntegerField()),
                ('fromValue', models.TextField(blank=True, null=True)),
                ('toValue', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'entity_logs',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('has_all_access', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('base_url', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('username', models.CharField(max_length=15, unique=True)),
                ('password', models.CharField(max_length=255, unique=True)),
                ('password_salt', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(default='default@default.com', max_length=50, unique=True)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(blank=True, max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100)),
                ('birthdate', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UsersGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.User')),
            ],
            options={
                'db_table': 'users_groups',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(related_name='users', through='entities.UsersGroups', to='entities.Group'),
        ),
        migrations.CreateModel(
            name='ServiceRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('ROUTE', 'ROUTE')], max_length=20)),
                ('url', models.CharField(max_length=255)),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='service_routes', to='entities.Service')),
            ],
            options={
                'db_table': 'service_routes',
                'unique_together': {('service', 'method', 'url')},
            },
        ),
        migrations.CreateModel(
            name='PermissionsServiceRoutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.Permission')),
                ('service_route', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.ServiceRoute')),
            ],
            options={
                'db_table': 'permissions_service_routes',
            },
        ),
        migrations.AddField(
            model_name='permission',
            name='service',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='permissions', to='entities.Service'),
        ),
        migrations.AddField(
            model_name='permission',
            name='service_routes',
            field=models.ManyToManyField(related_name='permissions', through='entities.PermissionsServiceRoutes', to='entities.ServiceRoute'),
        ),
        migrations.CreateModel(
            name='GroupsPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.Group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='entities.Permission')),
            ],
            options={
                'db_table': 'groups_permissions',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='permissions',
            field=models.ManyToManyField(related_name='groups', through='entities.GroupsPermissions', to='entities.Permission'),
        ),
        migrations.AddField(
            model_name='group',
            name='service',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='groups', to='entities.Service'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('clid', models.CharField(max_length=255, unique=True)),
                ('clsc', models.CharField(max_length=255, unique=True)),
                ('valid_until', models.DateField()),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='clients', to='entities.Service')),
                ('services', models.ManyToManyField(blank=True, related_name='clients_external_services', to='entities.Service')),
            ],
            options={
                'db_table': 'clients',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('modifiedby', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('expires', models.DateTimeField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='entities.Client')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='entities.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='entities.User')),
            ],
            options={
                'db_table': 'user_sessions',
                'unique_together': {('user', 'service', 'client')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('name', 'service')},
        ),
    ]
